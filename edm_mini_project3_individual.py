# -*- coding: utf-8 -*-
"""EDM_Mini_Project3_Individual.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d9HuP-HfpDpWcX392P09SQ3W1qGeJ_nO
"""

# Install Required Packages of Dune and Mongo DB

!pip install pymongo pandas
! pip install dune-client

# Connect to Dune using API Key

from dune_client.client import DuneClient
import pandas as pd

# Connect to Dune using its API generate for the user and query id generated by Dune

dune = DuneClient("xQ0GH11bpKU53Qv3c7pa1LWVHZBprAWp")
query_id = 4385897

# Run and Pull query results

try:
    query_result = dune.get_latest_result(query_id)
    print("Dune Analytics query successful.")

# Extract the rows from the query data and convert to Pandas Data Frame named bonk

    data = query_result.get_rows()
    if data:
        bonk = pd.DataFrame(data)
        print("DataFrame created successfully.")
        print(bonk.head())
    else:
        print("No rows found in the query result.")
except Exception as e:
    print(f"Error fetching data from Dune: {e}")

# Connect to Mongo DB using URL End point, Database name, password and collection name created in Mongo DB

from pymongo import MongoClient

# Mongo DB User Connection Details

client = MongoClient("mongodb+srv://aditag96:agarwal1@edmminiproject3.ji0w3.mongodb.net/")
db = client["bonk"]
collection = db["trades-28-nov"]

# Now transfer and push above created dataframe bonk to Mongo DB

if not bonk.empty:
    try:
        json_data = bonk.to_dict(orient="records")  # Convert bonk data frame into dictionaries
        result = collection.insert_many(json_data)

        print(f"Inserted {len(result.inserted_ids)} records into MongoDB.") # Check number of rows copied or not
    except Exception as e:
        print(f"An error occurred while inserting data into MongoDB: {e}")
else:
    print("No data to transfer to MongoDB.")